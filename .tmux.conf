# Set prefix key to back-tick (`).
unbind C-b
set-option -g prefix `
bind ` send-prefix

# displays *
unbind *
bind * list-clients

# next n
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind a
bind a last-window

# prev p
unbind p
bind p previous-window

# windows w
unbind w
bind w list-windows

# quit
# unbind \
# bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"

# split window horizontal/vertical
unbind _
bind-key - split-window -v
unbind _
bind-key _ split-window -v
unbind |
bind-key | split-window -h
#unbind \
#bind \ split-window -h

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# " windowlist -b
unbind '"'
bind '"' choose-window

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

set -g message-style bg=default,fg=white

set -g status-style bg=default,fg=white

set-window-option -g window-status-style bg=default,fg=white
# set-window-option -g window-status-bg default
# set-window-option -g window-status-fg white
set-window-option -g window-status-current-style fg=red
# # set-window-option -g window-status-current-attr bright
# set-window-option -g window-status-current-fg red

set -g status-right '#(/bin/bash $HOME/.tmux/plugins/kube.tmux 250 red cyan) #(/home/sledbetter/bin/tmux-loas) #[fg=green]#S [%Y-%m-%d %H:%M] #[fg=yellow]#10H'
# set -g status-right '#[fg=green]#S #[fg=yellow]#10H #[fg=green][#[fg=white]#T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]#[fg=green]]'

set -g status-left ''
set -g status-interval 60
bind r source-file ~/.tmux.conf
set -g history-limit 32767
set -g status-right-length 80
bind-key L  split-window '(prodaccess --kinit)' \; setw remain-on-exit off
# bind-key l command-prompt "split-window '(~/pwsafe/loxodo/loxodo.py -f ~/pwsafe/personal.psafe3 -s %% && sleep 60)'; setw remain-on-exit off"

unbind Escape
bind Escape copy-mode

unbind _
bind _ setw monitor-silence 10

set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

unbind "'"
bind "'" setw synchronize-panes
bind-key e run "tmux select-window -t emacs"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Speed up commands
set-option -sg escape-time 0

# Mouse on
# set -g mouse-utf8 on
# set -g mouse on

# if-shell "uname | grep -q Darwin" "source-file ~/.tmux-macosx" "source-file ~/.tmux-linux"

unbind h
unbind j
unbind k
unbind l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#set-option -g default-command "reattach-to-user-namespace -l zsh"

# List of plugins
# Supports `github_username/repo` or full git repo URLs
 set -g @tpm_plugins '             \
   tmux-plugins/tpm                \
   tmux-plugins/tmux-battery       \
 '
 # Initializes TMUX plugin manager.
 # Keep this line at the very bottom of tmux.conf.
 run-shell '~/.tmux/plugins/tpm/tpm'
